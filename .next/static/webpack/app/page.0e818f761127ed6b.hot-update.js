"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/store.ts":
/*!**************************!*\
  !*** ./src/lib/store.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStore: function() { return /* binding */ useStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _recurrence__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./recurrence */ \"(app-pages-browser)/./src/lib/recurrence.ts\");\n\n\n\n\nconst defaultUsers = [\n    {\n        id: \"1\",\n        name: \"나\",\n        email: \"me@example.com\"\n    },\n    {\n        id: \"2\",\n        name: \"팀원1\",\n        email: \"team1@example.com\"\n    },\n    {\n        id: \"3\",\n        name: \"팀원2\",\n        email: \"team2@example.com\"\n    }\n];\nconst defaultCategories = [\n    {\n        id: \"1\",\n        name: \"업무\",\n        color: \"#3b82f6\",\n        order: 0\n    },\n    {\n        id: \"2\",\n        name: \"개인\",\n        color: \"#10b981\",\n        order: 1\n    },\n    {\n        id: \"3\",\n        name: \"가정\",\n        color: \"#f59e0b\",\n        order: 2\n    }\n];\nconst useStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set, get)=>({\n        users: defaultUsers,\n        categories: defaultCategories,\n        tasks: [],\n        currentUser: defaultUsers[0],\n        filter: {},\n        addTask: (taskData)=>{\n            const now = new Date();\n            const newTask = {\n                ...taskData,\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                createdAt: now,\n                updatedAt: now,\n                isDeleted: false\n            };\n            // 중복 방지: 같은 제목의 태스크가 최근 2초 내에 생성되었는지 확인\n            const { tasks } = get();\n            const recentDuplicate = tasks.find((task)=>task.title === newTask.title && !task.isDeleted && Math.abs(now.getTime() - new Date(task.createdAt).getTime()) < 2000);\n            if (recentDuplicate) {\n                console.log(\"중복 태스크 생성 방지:\", newTask.title);\n                return;\n            }\n            set((state)=>({\n                    tasks: [\n                        ...state.tasks,\n                        newTask\n                    ]\n                }));\n        },\n        updateTask: (id, updates)=>{\n            set((state)=>({\n                    tasks: state.tasks.map((task)=>task.id === id ? {\n                            ...task,\n                            ...updates,\n                            updatedAt: new Date()\n                        } : task)\n                }));\n        },\n        deleteTask: (id)=>{\n            set((state)=>({\n                    tasks: state.tasks.map((task)=>task.id === id ? {\n                            ...task,\n                            isDeleted: true,\n                            deletedAt: new Date(),\n                            updatedAt: new Date()\n                        } : task)\n                }));\n        },\n        restoreTask: (id)=>{\n            set((state)=>({\n                    tasks: state.tasks.map((task)=>task.id === id ? {\n                            ...task,\n                            isDeleted: false,\n                            deletedAt: undefined,\n                            updatedAt: new Date()\n                        } : task)\n                }));\n        },\n        permanentDeleteTask: (id)=>{\n            set((state)=>({\n                    tasks: state.tasks.filter((task)=>task.id !== id)\n                }));\n        },\n        cleanupOldDeletedTasks: ()=>{\n            const sevenDaysAgo = new Date();\n            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n            set((state)=>({\n                    tasks: state.tasks.filter((task)=>!task.isDeleted || !task.deletedAt || new Date(task.deletedAt) > sevenDaysAgo)\n                }));\n        },\n        toggleTaskComplete: (id)=>{\n            set((state)=>({\n                    tasks: state.tasks.map((task)=>task.id === id ? {\n                            ...task,\n                            completed: !task.completed,\n                            completedAt: !task.completed ? new Date() : undefined,\n                            isToday: !task.completed ? false : task.isToday,\n                            updatedAt: new Date()\n                        } : task)\n                }));\n        },\n        toggleTaskToday: (id)=>{\n            set((state)=>({\n                    tasks: state.tasks.map((task)=>task.id === id ? {\n                            ...task,\n                            isToday: !task.isToday,\n                            updatedAt: new Date()\n                        } : task)\n                }));\n        },\n        addUser: (userData)=>{\n            const newUser = {\n                ...userData,\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()\n            };\n            set((state)=>({\n                    users: [\n                        ...state.users,\n                        newUser\n                    ]\n                }));\n        },\n        setCurrentUser: (user)=>{\n            set({\n                currentUser: user\n            });\n        },\n        addCategory: (categoryData)=>{\n            const newCategory = {\n                ...categoryData,\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(),\n                order: get().categories.length\n            };\n            set((state)=>({\n                    categories: [\n                        ...state.categories,\n                        newCategory\n                    ]\n                }));\n        },\n        updateCategory: (id, updates)=>{\n            set((state)=>({\n                    categories: state.categories.map((category)=>category.id === id ? {\n                            ...category,\n                            ...updates\n                        } : category)\n                }));\n        },\n        deleteCategory: (id)=>{\n            set((state)=>({\n                    categories: state.categories.filter((category)=>category.id !== id),\n                    tasks: state.tasks.map((task)=>task.categoryId === id ? {\n                            ...task,\n                            categoryId: undefined\n                        } : task)\n                }));\n        },\n        reorderCategories: (categories)=>{\n            set({\n                categories\n            });\n        },\n        setFilter: (newFilter)=>{\n            set((state)=>({\n                    filter: {\n                        ...state.filter,\n                        ...newFilter\n                    }\n                }));\n        },\n        clearFilter: ()=>{\n            set({\n                filter: {}\n            });\n        },\n        getFilteredTasks: ()=>{\n            const { tasks, filter } = get();\n            return tasks.filter((task)=>{\n                // Exclude deleted tasks\n                if (task.isDeleted) return false;\n                if (filter.assigneeId && !task.assignees.includes(filter.assigneeId)) {\n                    return false;\n                }\n                if (filter.categoryId && task.categoryId !== filter.categoryId) {\n                    return false;\n                }\n                if (filter.completed !== undefined && task.completed !== filter.completed) {\n                    return false;\n                }\n                if (filter.isToday !== undefined && task.isToday !== filter.isToday) {\n                    return false;\n                }\n                if (filter.search) {\n                    var _task_description;\n                    const searchLower = filter.search.toLowerCase();\n                    const titleMatch = task.title.toLowerCase().includes(searchLower);\n                    const descriptionMatch = (_task_description = task.description) === null || _task_description === void 0 ? void 0 : _task_description.toLowerCase().includes(searchLower);\n                    const assigneeMatch = task.assignees.some((assigneeId)=>{\n                        const user = get().users.find((u)=>u.id === assigneeId);\n                        return user === null || user === void 0 ? void 0 : user.name.toLowerCase().includes(searchLower);\n                    });\n                    if (!titleMatch && !descriptionMatch && !assigneeMatch) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        },\n        getTodayTasks: ()=>{\n            const { tasks } = get();\n            return tasks.filter((task)=>task.isToday && !task.completed && !task.isDeleted);\n        },\n        getCompletedTasks: ()=>{\n            const { tasks } = get();\n            return tasks.filter((task)=>task.completed && !task.isDeleted);\n        },\n        getUserTasks: (userId)=>{\n            const { tasks } = get();\n            return tasks.filter((task)=>task.assignees.includes(userId) && !task.isDeleted);\n        },\n        getDeletedTasks: ()=>{\n            const { tasks } = get();\n            return tasks.filter((task)=>task.isDeleted);\n        },\n        getImportantTasks: ()=>{\n            const { tasks } = get();\n            // 중요한 업무는 isToday가 true인 업무로 정의\n            return tasks.filter((task)=>task.isToday && !task.completed && !task.isDeleted);\n        },\n        processRecurringTasks: ()=>{\n            const { tasks } = get();\n            const newTasks = [];\n            // Find original recurring tasks (not generated ones)\n            const originalRecurringTasks = tasks.filter((task)=>task.recurrence.type !== \"none\" && !task.parentTaskId);\n            originalRecurringTasks.forEach((task)=>{\n                if ((0,_recurrence__WEBPACK_IMPORTED_MODULE_0__.shouldCreateRecurringTask)(task, tasks)) {\n                    const recurringTask = (0,_recurrence__WEBPACK_IMPORTED_MODULE_0__.createRecurringTask)(task);\n                    newTasks.push(recurringTask);\n                }\n            });\n            if (newTasks.length > 0) {\n                set((state)=>({\n                        tasks: [\n                            ...state.tasks,\n                            ...newTasks\n                        ]\n                    }));\n            }\n            // Cleanup old deleted tasks (7 days)\n            get().cleanupOldDeletedTasks();\n        }\n    }), {\n    name: \"todo-app-storage\",\n    skipHydration: true\n}));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/store.ts\n"));

/***/ })

});